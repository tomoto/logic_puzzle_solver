#include "nur/solver/Solver.h"
#include "nur/serializer/Loader.h"
#include "nur/serializer/Formatter.h"

#include <gtest/gtest.h>

using namespace nur;

TEST(nur_Solver, NK_0001) {
  auto b = Loader::load({
    "0 0 0 0 0 0 0 5 0 2",
    "3 0 0 0 0 0 0 0 0 0",
    "0 4 0 0 2 0 0 0 0 0",
    "0 0 0 0 0 0 3 0 0 0",
    "0 4 0 0 0 4 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 3",
    "0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0",
    "0 3 0 0 3 0 0 0 0 0",
    "0 0 1 0 0 1 0 3 0 3"
    });

  Solver solver;
  auto state = solver.solve(b);
  EXPECT_EQ(state.status, cmn::CompletionStatus::complete);
  EXPECT_EQ(Formatter::formatPretty(state.board),
    " X X██ X X X X 5██ 2\n"
    " 3████████████████ X\n"
    "██ 4 X██ 2 X██ X████\n"
    "████ X X████ 3 X██ X\n"
    "██ 4██████ 4██████ X\n"
    "██ X X X██ X X X██ 3\n"
    "████████████████████\n"
    "██ X X██ X X██ X██ X\n"
    "██ 3████ 3████ X██ X\n"
    "████ 1████ 1██ 3██ 3\n"
  );
}

TEST(nur_Solver, NK_0002) {
  auto b = Loader::load({
    "6 0 2 0 3 0 0 0 0 3",
    "0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 4",
    "0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 2 0 0 0 0 2",
    "3 0 0 0 0 5 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0",
    "3 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0",
    "4 0 0 0 0 5 0 4 0 1",
    });

  Solver solver;
  auto state = solver.solve(b);
  EXPECT_EQ(state.status, cmn::CompletionStatus::complete);
  EXPECT_EQ(Formatter::formatPretty(state.board),
    " 6██ 2██ 3 X██ X X 3\n"
    " X██ X██ X██████████\n"
    " X██████████ X X X 4\n"
    " X X X██ X██████████\n"
    "████████ 2██ X X██ 2\n"
    " 3 X X████ 5 X X██ X\n"
    "████████ X██████████\n"
    " 3 X X██ X X██ X X██\n"
    "██████████ X██ X████\n"
    " 4 X X X██ 5██ 4██ 1\n"
  );
}

TEST(nur_Solver, NK_0005) {
  auto b = Loader::load({
    "0 1 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0",
    "0 0 0 0 5 0 0 0 0 2 0 0 0 0 0 1 0 0",
    "0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0",
    "0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 1 0 0",
    "1 0 1 0 0 0 0 0 0 0 4 0 0 0 1 0 0 0",
    "0 1 0 0 0 0 0 3 0 0 0 0 0 7 0 0 0 0",
    "0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6",
    "0 0 0 0 4 0 0 0 2 0 0 4 0 0 0 0 0 0",
    "0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 5 0",
    "0 1 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0",
    });
  Solver solver;
  auto state = solver.solve(b);
  EXPECT_EQ(state.status, cmn::CompletionStatus::complete);
  EXPECT_EQ(Formatter::formatPretty(state.board),
    "██ 1██ 1████████ 1██████████ 1██████\n"
    "████████ 5██ X████ 2 X██ X████ 1██ X\n"
    "██ X X X X██ X██ 1██████ X██ 1████ X\n"
    "██████████ 5 X██████ X██ X████ 1██ X\n"
    " 1██ 1██ X██ X██ X X 4██ X██ 1████ X\n"
    "██ 1████ X████ 3████████ X 7██ X██ X\n"
    "████ 3██ X██ X X██ X X████ X██ X██ 6\n"
    "██ X X██ 4██████ 2██ X 4██████ X████\n"
    "████████████ 5██ X████████ X██ X 5██\n"
    "██ 1██ X X X X██████ X X X 5████████\n"

  );
}

TEST(nur_Solver, NK_0008) {
  auto b = Loader::load({
    "0 0 0 0 2 0 1 0 0 0 0 0 0 0 0 0 0 0 5 0 5 0 0 0",
    "0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 12 0 0 0 0 0 1 0",
    "0 7 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 3",
    "0 0 0 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "6 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 1",
    "9 0 0 0 0 0 0 0 0 0 0 0 15 0 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 3",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0",
    "2 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 3 0",
    "0 4 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0",
    "0 0 0 8 0 3 0 0 0 0 0 0 0 0 0 0 0 2 0 4 0 0 0 0",
    });
  Solver solver;
  auto state = solver.solve(b);
  EXPECT_EQ(state.status, cmn::CompletionStatus::complete);
  EXPECT_EQ(Formatter::formatPretty(state.board),
    " X X X██ 2██ 1██ X X X X X X X██████ 5██ 5██████\n"
    "████ 4██ X██████████ X██████ X X12██ X██ X██ 1██\n"
    "██ 7████████ X██ 1██ X██ X██████████ X██ X██████\n"
    "██ X X X X██ X X████████ X██ 1██ X██ X██ X██ X 3\n"
    "████████ X X██ X X X 7██ X X████ X██ X██ X██ X██\n"
    " 6 X X████████████████████ 5██ X X██████████████\n"
    "████ X X X██ X X X X X 6████ X X X X X X X X██ 1\n"
    " 9██████████████████████15 X X██████████████████\n"
    " X X X X X X X X██ X 3 X██████ X X X X X██ X X 3\n"
    "██████████████████████████ 8 X X████████████████\n"
    " 2 X██ X X X X X██ 8 X X X████████ X██ X██ X X██\n"
    "██████ X████████████████ X X██ 4 X X██ X████ 3██\n"
    " X 4██ X██ X██ 5 X X X X██ X X████████ X██ 3████\n"
    " X X██ 8██ 3 X██████████████████ X 2██ 4██ X X██\n"
  );
}

TEST(nur_Solver, big) {
  auto b = Loader::load({
    "0 0 0 0 3 0 2 0 0 0 0 0 0 4 0 0 3 0 0 3 0 0 0 0 0 0 0 0 0 10 0 0 3 0 0 2 0 0 3 0 0 0 0 0 0 0 0 5 0 0 0 0 0 4 0 0 9 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 10 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 7 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0",
    "3 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0",
    "0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 2 0 4 0 0 0 4 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 6 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "0 6 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 6 0 0 0 0 1 0 0 0 0 5 0 0 3 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 0 0 0",
    "0 0 0 0 0 0 0 2 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0",
    "0 6 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 7 0 0 0 10 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 11",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "0 0 9 0 0 0 0 0 0 0 6 0 0 9 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 9 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7",
    "0 0 0 0 2 0 0 0 0 0 0 0 0 0 4 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 5 0 0 0 7 0 0 4 0 3 0 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "7 0 0 0 0 0 0 0 0 0 12 0 0 0 0 0 0 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 5",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 4 0 0 0 0 0 0 0 0 0 0 0 7 0 0 0 0 0 0 11 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 3 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "0 7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 6 0 0 1 0 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 1 0 0 0 3 0 0 0 0 0 0 5 0 0 0 5 0 0 6 0 3 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 4 0 5 0 0 0 0 5 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 5",
    "0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 2 0 0 0 0 0 10 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0 0 0",
    "0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 4 0 10 0 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 5 0 0 0 0 0 0 0 0",
    "8 0 0 0 0 8 0 0 0 5 0 5 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 6 0 0 0 0 7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 3 0 0 0 7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 6",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0 0 0 4 0 0 0 2 0 0 0 0 0 3 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 13 0",
    "0 0 5 0 0 0 0 0 0 0 7 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 4 0 0 0 0 4 0 0 0 0 0 0 0 0 0 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "3 0 0 3 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 5 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0",
    "0 0 0 8 0 0 0 0 0 0 2 0 0 0 0 6 0 0 0 0 0 11 0 4 0 0 4 0 0 0 0 0 10 0 1 0 0 0 0 0 0 0 0 0 0 5 0 12 0 0 0 0 0 0 4 0 2 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 9 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 1 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3",
    "0 3 0 0 3 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 4 0 0 0 2 0 0 0 0 0 0 0 0 0 0 6 0 0",
    "2 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0 0 0 0 0 7 0 0 0 0 0 0 7",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 7 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0 0 3 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 5 0 3 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 8 0 0 0 0 0 12 0 0 2 0 3 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0",
    "0 10 0 0 0 0 6 0 0 0 0 5 0 0 1 0 0 0 0 0 0 0 0 0 0 0 3 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0",
    "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 8 0 0 0 4 0 0 0 0 0 0 11 0 0 4 0 3 0 0",
    "0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0",
    "0 8 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
    "3 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 6 0 0 0 3 0 4 0 0 0 0 0 2 0 0 3 0 0 4 0 0 0 0 0",
    "0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 3",
    "0 0 0 3 0 0 0 5 0 4 0 0 0 0 0 0 9 0 0 0 0 10 0 0 0 13 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0",
    "0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 7 0 0 0 0 0 5 0 4 0 0 0 4 0 0 0 0 0 0 0 0 3 0 0 2 0 0 0 0 0",
    });

  int steps = 0;
  auto reportProgress = [&](nur::Solver::BoardState& state, int depth) mutable {
    // std::cout << "steps: " << ++steps << "\n";
    // std::cout << Formatter::formatPretty(state.board);
    // std::cout << Formatter::formatData(state.board);
    };

  Solver solver;
  auto state = solver.solve(b, reportProgress);

  EXPECT_EQ(Formatter::formatPretty(state.board),
    " X██ X X 3██ 2████████████ 4 X██ 3██ X 3██████████████████10 X██ 3 X██ 2██ X 3████████████████ 5 X████████ 4 X██ 9██████████████\n"
    " X██████████ X██ X X X X 8██ X██ X██ X████ X X 6██ X X X10██ X████ X██ X██ X██ 2██ X X X X X 7██ X██ X X 5██ X██ X██ X X X X X██\n"
    " 3██ X██ X 2████ X██████████ X██ X██████ X X████ X X████████ X X██████████████ X██ X████████████ X██ X██████ X██ X██████████ 6██\n"
    "████ X████████ X X██ X 8 X X██████ 2 X██ X████ X X████ X X████ X X X X██ X X██████████ X██ X 2██ X██ X██ X██████ X██ X 3██ 3████\n"
    "██ X X██ X X████████ X████████ X████████████ X X████ 3██ X X X████ X██ 2██ 4██ X X 4██ X X██████████████ 2██ X X X██ X████ X X██\n"
    "██ X██████ X X██ X X X██ X██ 3 X██ 4 X X X████████ X X██████ 6██ 6████ X██ X████ X██████ X X██ X X 5 X X██ X X████████ X X██████\n"
    "██ 6██ X████ 5██████████ X X████████████████ X 2████████ X 6████ X██ 1████████ 5██ X 3████ 6████████████████████ X X 3██ 3██ X X\n"
    "████ X X X████ 2 X██ X████ 4██ X██ X██ X██ X██████ X X X X████ X X██████ X X X X██ X██ X████ 2██ X X X██ X X X████████████ 2██ X\n"
    "██ 6 X██████ X██████ X X X██ 3 X██ X██ X██ X X X████████████ X X████ X 4██████████████ X X██ X██████ X 5████ X X X X X X██ X██ X\n"
    " X██████ X██ X██ X██████ X████████ X██ X██████ X X X██ X X████████ X X██ X 2██ X X X████ X X████ X 2██████ 7██████10██████████ X\n"
    " X██ X X X██ X██ X X X██ X██ X X██ 4██ X██ X██████ X 9██ X██ X X██████████████████ X X████ 6██ X██████ X X X██ X 6██ X X X X X11\n"
    " X██ X██████ X██████ X██ X████ X X████ X██ X██ X 2██████ X 5██ X X X X██ X X X X 6██ X X X██ X X██ X X X██████ X████████████████\n"
    " X██ 9██ X██ X X X██ 6██ X 9████ X 6██ X██ X████████ X██████████████ X 8██ X████████████ 9██ 4████████████ X X X██ X X X X X X 7\n"
    " X██ X██ 2██████ X X████████ 4 X████ 8 X██ X X X X██ X██ X X X██ X 2██████████ X X X X 5██████ 7██ X 4██ 3██████████████████████\n"
    " X██ X X██ X X████ X X██ X████ X X██████████████ X██ X██████ X████████ X X X██████████████ X X X██ X██ X X██ X X X X X██ X X X X\n"
    " 7██████████ X X████12██ X X X████ X X██ X X X██ 9██ X X X██ X X X X██████ X X██ X X██ X X X██████ X████████████████ 6████████ 5\n"
    "████ X██ X████ X X X████████ 5██ 4 X████████ X X████████ 7████████ X X11████ 6████ X██████████ X██████ X X X X X X 8██ X X 3████\n"
    "██ X X██ X X██████ X X X X12████████ X X X████ X X██ X████ X██ X████████ X████ X██ 4██ X██ X██ X X X██████ X████████████████ X X\n"
    "██ 7██████ X██ X██████████████ X X██████ X X████ 8██ X██ X X██ X X██ X██ X X██ X████ X X██ 2██████ 6 X██ 1████ X X X X X X████ X\n"
    "██ X██ 1██ X██ 3 X██ X X X X 5██ X X 5████ 6██ 3████ X██ X██████ X██ 2████ X██ X X██ X██████ X X X████████ X████████████ X X██ X\n"
    "██ X X██ X X 9████████████████████████ 2 X██ X X██ X X██ X██ X██ 5████ 4██ 5████ X██ 5██ X██████ X██ X 5 X X██ X██ X X████ X██ 5\n"
    "████████████ X██ X X X 4██ X X██ X X████████████ X X████ 6██ X 3██ X X X████ X██ X████ X X██ X██ 5████████████ 2████ X X██10████\n"
    "██ X██ X X X████████████ 1██ X 4██ X X X██ X X██ X████ X████████████████ X██ X██ 7██ X X████ X████ X██ X██ X████ X████ X████ X X\n"
    "██ X██████ X██ X██ X X████████████████ X████ X██ X██ 5 X██ X X X X X██ X X██ X X████ X████ X X██ X X██ X██ X X██ X X██ X 7████ X\n"
    "██ 3██ X██ X██ X████ X X██ X X██ X X██ X 8██ 4██10████ X██████████ 7██ X██████ X██ X X██ X X██████ X██ 3████ X 5██ X██████ X██ X\n"
    " 8████ X██ 8██ X X 5██ 5████ X 4██ X██████ X██████ X██ X██ 1██ X██ X██ X██ X██ 6██ X████ 7████ X██ X████ X████████ X X██ 4 X██ X\n"
    " X X X X██ X X██████████ X████████ X X X██ X██ X██ X 4██████ 3 X████ 7 X██ X X████ X██ X████ X X██ X██ X X X X X████ X 8██ X██ 6\n"
    " X██████████████ X X X██ X X X X██████ 7██ X██ 4██ X██ 2 X██████ X 3████████ 4██ X X██ X X██ X████ X██████████ X 8██████████13██\n"
    "████ 5 X X X X██████ 7████████ 6██ X████ X X██ X██████████ X 7██ X████ X██ X████ X██████ X██ 5██ X X██ X X 4██████ X X X X X X██\n"
    "██ X████████████ 1██ X██ X██ X████ X X██ X████ X██ X X X X X██ 6██ 4 X X██ X 4██ X██ X██ X X████10████ X████ X X X X████████████\n"
    "██ X 3██ X██ X X██ X X██ X██ X X████ 4██ X██ 1████████████████ X██████████ X██16 X██ X████ X X████ 4██████ X X████████ X X X X██\n"
    " 3████ 3 X██ X██████████ 3████ X██ X████ X████ X██ X X X██ X X X██ X X X X██████████ X X████ X X██ X██ 1████████ X X████████ 5██\n"
    " X X████████ X██ X██ X████ X██ X██ X X██ X██ X X██████ X 5██ X██ X X████ X X X██ X████ X 6████ X██ X X██ X X X████ 3██ X X████ X\n"
    "██████ 8 X X X██ X██ 2██ X X██ 6████ X██ X11██ 4██ X 4██████████10██ 1██████████ X X██████ 5██12████████████ 4██ 2██████ X X██ X\n"
    "██ X X██████████ X████ 9██ X 6██ X██ X██████████ X X████ X X X 6██████ X X██ 1████ 4██ X X X████ X██ X██ X X████ X██ X████ X██ 3\n"
    "██ 3████ 3 X X██ 4██ X X██ X████ X██ X X X██ X████████ X X████████ X██ X██████ 4 X██████ X██ 4 X X██ 2████ X X X████ X X██ 6████\n"
    " 2████ X██████████ X X██████ 2██ X████ 9████ X X X X████████ X X X X██ 4██ X X██ X X██ 7██████████████ X██████ X 7████ X████ X 7\n"
    " X██ X X X██ X X X X████ X██ X██ X 5████ X████████ X 7██ X████████ X████ X X██████████ X X X X X██ X██ 4██ X██████ X██ X 7████ X\n"
    "████ X████████████████ X 8██████████ X X X X X 7██████ X X X X X██ X X██ 5████ X X██ X██████ X██ 3 X██ X██ X X X██ X██ X██ X██ X\n"
    "██ X X██ X X██ X X X X X██ X 3██ X██████████████ X X██████████ 7████ X████ X X X██ 3 X██ 2 X██████████ X██████ X██ X██████ 2██ X\n"
    "██ X██████ X██████████████ X██ X X 4██ X 4██ X████ X X X X X████ X██ X X██ 6██████████████████ X██ X████ 2 X██ X██ X 5██ 3██ X X\n"
    "██ X██ X██ X X██ X X██ X████████████ X X██ X X 4██████████ 8██ X X████12████ 2██ 3 X X██ X X X X██ X██ 4██████ X██████ X X██████\n"
    "██10██ X████ 6████ X██ 5 X██ 1██ X██████████████ X X 3██ 5██████ X X████ X██ X████████ X X████████ X██ X██ 1██ X██ X X████ X X██\n"
    "████ X X X████ X██ X████ X X██ X X 4██ X██ X X████████ X X██ X██ X████ 3 X████ X X██ X X██ 8 X X██ 4██ X X██ X X11██ X 4██ 3████\n"
    "██ X X██████ X X██ X 6██████████████ X X████ X X X██ X X██ X X██ 7██ 6██████ X X████ X████████ X X██████████████████████████ 6██\n"
    "██ 8██ 2 X██ X████████ X██ X██ X X████ X X██████ 6████████ X██████ X X██ X██ X████12 X██ X X████ X X X██ X██ X██ X X██ X X X X██\n"
    " 3██████████ X██ X X██ X██ X 3██ X X████ X X X████ X X X██ X██ X X X██ X X██ 6██ 6██████ 3██ 4██████████ 2██ X 3██ X 4████ X████\n"
    " X X██ X X██ 6████ X██ X██████████ X X██████ X X██████ X██ 6██████████ X██████ X X X X X████ X X X██ X X████████████████ 3████ 3\n"
    "██████ 3██████ 5██ 4██ X X X X X 9██ X X X10██ X X13██ X████ X X X 4██ X██ X████████████ X████████████ X X X 6██ X██ X██ X X██ X\n"
    " X X 3████ X X X X██████████████████████████████████ 8 X X██████████ 7 X██ X X X 5██ 4 X X██ 4 X X X██████████ 3 X██ 2████████ X\n"
  ) << Formatter::formatPretty(state.board)
    << Formatter::formatData(state.board)
    << std::endl;
}